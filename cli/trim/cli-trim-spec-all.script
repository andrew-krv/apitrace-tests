# Trim trace to the final glxDestroyContext, eliminating almost everything

apitrace trim-auto --calls=88 --output glxsimple-trim-spec-all.trace glxsimple.trace

# Verify that we actually trimmed what we wanted to (most of the trace)

apitrace diff --tool=python glxsimple.trace glxsimple-trim-spec-all.trace
expect r"""  glXChooseVisual(dpy = 0x236a280, screen = 0, attribList = {GLX_RGBA, GLX_RED_SIZE, GLX_RED_SIZE, GLX_GREEN_SIZE, GLX_RED_SIZE, GLX_BLUE_SIZE, GLX_RED_SIZE, GLX_ALPHA_SIZE, GLX_RED_SIZE, GLX_DOUBLEBUFFER, GLX_DEPTH_SIZE, 24, GLX_STENCIL_SIZE, GLX_RED_SIZE, GLX_X_VISUAL_TYPE, GLX_DIRECT_COLOR, 0}) = &{screen = 0, visual = 0x2374ef8, blue_mask = 255, c_class = 5, depth = 24, visualid = 34, bits_per_rgb = 8, green_mask = 65280, red_mask = 16711680, colormap_size = 256}
  glXCreateContext(dpy = 0x236a280, vis = &{screen = 0, visual = 0x2374ef8, blue_mask = 255, c_class = 5, depth = 24, visualid = 34, bits_per_rgb = 8, green_mask = 65280, red_mask = 16711680, colormap_size = 256}, shareList = 0, direct = True) = 0x2384330
  glXMakeCurrent(dpy = 0x236a280, drawable = 41943041, ctx = 0x2384330) = True
  glViewport(x = 0, y = 0, width = 64, height = 64)
  glMatrixMode(mode = GL_PROJECTION)
  glLoadIdentity()
  glOrtho(left = 0.0, right = 64.0, bottom = 64.0, top = 0.0, zNear = 0.0, zFar = 1.0)
  glMatrixMode(mode = GL_MODELVIEW)
  glClearColor(red = 0.0, green = 0.0, blue = 1.0, alpha = 1.0)
- glClear(mask = (GL_COLOR_BUFFER_BIT))
- glXSwapBuffers(dpy = 0x236a280, drawable = 41943041)
- glCreateShader(type = GL_VERTEX_SHADER) = 7
- glShaderSource(shader = 7, count = 1, string = &'void main()\n{\n        gl_Position = ftransform();\n}\n', length = 0)
- glCompileShader(shader = 7)
- glCreateShader(type = GL_FRAGMENT_SHADER) = 8
- glShaderSource(shader = 8, count = 1, string = &'#version 120\nuniform vec4 color;\nvoid main()\n{\n        gl_FragColor = color;\n}\n', length = 0)
- glCompileShader(shader = 8)
- glCreateProgram() = 9
- glAttachShader(program = 9, shader = 7)
- glAttachShader(program = 9, shader = 8)
- glLinkProgram(program = 9)
- glUseProgram(program = 9)
- glGetUniformLocation(program = 9, name = color) = 0
- glUniform4f(location = 0, v0 = 0.0, v1 = 1.0, v2 = 0.0, v3 = 1.0)
- glBegin(mode = GL_QUADS)
- glVertex2f(x = 0.0, y = 0.0)
- glVertex2f(x = 64.0, y = 0.0)
- glVertex2f(x = 64.0, y = 64.0)
- glVertex2f(x = 0.0, y = 64.0)
- glEnd()
  glUseProgram(program = 0)
- glXSwapBuffers(dpy = 0x236a280, drawable = 41943041)
- glGenTextures(n = 1, textures = &1)
  glBindTexture(target = GL_TEXTURE_2D, texture = 1)
- glTexImage2D(target = GL_TEXTURE_2D, level = 0, internalformat = GL_COMPRESSED_RGBA, width = 1, height = 1, border = 0, format = GL_RGB, type = GL_UNSIGNED_BYTE, pixels = blob(3))
  glEnable(cap = GL_TEXTURE_2D)
- glBegin(mode = GL_QUADS)
- glTexCoord2f(s = 0.0, t = 0.0)
- glVertex2f(x = 0.0, y = 0.0)
- glTexCoord2f(s = 1.0, t = 0.0)
- glVertex2f(x = 64.0, y = 0.0)
- glTexCoord2f(s = 1.0, t = 1.0)
- glVertex2f(x = 64.0, y = 64.0)
- glTexCoord2f(s = 0.0, t = 1.0)
- glVertex2f(x = 0.0, y = 64.0)
- glEnd()
  glDisable(cap = GL_TEXTURE_2D)
- glXSwapBuffers(dpy = 0x236a280, drawable = 41943041)
  glClearColor(red = 1.0, green = 0.0, blue = 0.0, alpha = 1.0)
- glClear(mask = (GL_COLOR_BUFFER_BIT))
- glXSwapBuffers(dpy = 0x236a280, drawable = 41943041)
- glCreateShader(type = GL_VERTEX_SHADER) = 10
- glShaderSource(shader = 10, count = 1, string = &'void main()\n{\n        gl_Position = ftransform();\n}\n', length = 0)
- glCompileShader(shader = 10)
- glCreateShader(type = GL_FRAGMENT_SHADER) = 11
- glShaderSource(shader = 11, count = 1, string = &'#version 120\nuniform vec4 color;\nvoid main()\n{\n        gl_FragColor = color;\n}\n', length = 0)
- glCompileShader(shader = 11)
- glCreateProgram() = 12
- glAttachShader(program = 12, shader = 10)
- glAttachShader(program = 12, shader = 11)
- glLinkProgram(program = 12)
- glUseProgram(program = 12)
- glGetUniformLocation(program = 12, name = color) = 0
- glUniform4f(location = 0, v0 = 1.0, v1 = 0.0, v2 = 1.0, v3 = 1.0)
- glBegin(mode = GL_QUADS)
- glVertex2f(x = 0.0, y = 0.0)
- glVertex2f(x = 64.0, y = 0.0)
- glVertex2f(x = 64.0, y = 64.0)
- glVertex2f(x = 0.0, y = 64.0)
- glEnd()
  glUseProgram(program = 0)
- glXSwapBuffers(dpy = 0x236a280, drawable = 41943041)
- glGenTextures(n = 1, textures = &2)
  glBindTexture(target = GL_TEXTURE_2D, texture = 2)
- glTexImage2D(target = GL_TEXTURE_2D, level = 0, internalformat = GL_COMPRESSED_RGBA, width = 1, height = 1, border = 0, format = GL_RGB, type = GL_UNSIGNED_BYTE, pixels = blob(3))
  glEnable(cap = GL_TEXTURE_2D)
- glBegin(mode = GL_QUADS)
- glTexCoord2f(s = 0.0, t = 0.0)
- glVertex2f(x = 0.0, y = 0.0)
- glTexCoord2f(s = 1.0, t = 0.0)
- glVertex2f(x = 64.0, y = 0.0)
- glTexCoord2f(s = 1.0, t = 1.0)
- glVertex2f(x = 64.0, y = 64.0)
- glTexCoord2f(s = 0.0, t = 1.0)
- glVertex2f(x = 0.0, y = 64.0)
- glEnd()
  glDisable(cap = GL_TEXTURE_2D)
- glXSwapBuffers(dpy = 0x236a280, drawable = 41943041)
  glXDestroyContext(dpy = 0x236a280, ctx = 0x2384330)
"""
