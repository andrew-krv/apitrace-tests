//!tri_glsl_core
glViewport(x = 0, y = 0, width = 250, height = 250)
glScissor(x = 0, y = 0, width = 250, height = 250)
glClearColor(red = 0.3, green = 0.1, blue = 0.3, alpha = 1)
glCreateShader(type = GL_FRAGMENT_SHADER) = <fs>
glShaderSource(shader = <fs>, count = 1, string = &"varying vec4 v_color;
void main() {
    gl_FragColor = v_color;
}
", length = NULL)
glCompileShader(shader = <fs>)
glGetShaderiv(shader = <fs>, pname = GL_COMPILE_STATUS, params = &1)
glCreateShader(type = GL_VERTEX_SHADER) = <vs>
glShaderSource(shader = <vs>, count = 1, string = &"uniform mat4 modelviewProjection;
attribute vec4 pos;
attribute vec4 color;
varying vec4 v_color;
void main() {
    gl_Position = modelviewProjection * pos;
    v_color = color;
}
", length = NULL)
glCompileShader(shader = <vs>)
glGetShaderiv(shader = <vs>, pname = GL_COMPILE_STATUS, params = &1)
glCreateProgram() = <program>
glAttachShader(program = <program>, shader = <fs>)
glAttachShader(program = <program>, shader = <vs>)
glBindAttribLocation(program = <program>, index = 0, name = "pos")
glBindAttribLocation(program = <program>, index = 1, name = "color")
glLinkProgram(program = <program>)
glGetProgramiv(program = <program>, pname = GL_LINK_STATUS, params = &1)
glUseProgram(program = <program>)
glGetAttribLocation(program = <program>, name = "pos") = 0
glGetAttribLocation(program = <program>, name = "color") = 1
glGetUniformLocation(program = <program>, name = "modelviewProjection") = 0
glViewport(x = 0, y = 0, width = 250, height = 250)
glGenBuffers(n = 1, buffer = &<vbo>)
glUniformMatrix4fv(location = 0, count = 1, transpose = GL_FALSE, value = {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1})
glClear(mask = GL_COLOR_BUFFER_BIT)
glGenVertexArrays(n = 1, arrays = &<vao>)
glBindVertexArray(array = <vao>)
glBindBuffer(target = GL_ARRAY_BUFFER, buffer = <vbo>)
glBufferData(target = GL_ARRAY_BUFFER, size = 60, data = blob(60), usage = GL_STATIC_DRAW)
glVertexAttribPointer(index = 0, size = 2, type = GL_FLOAT, normalized = GL_FALSE, stride = 20, pointer = NULL)
glEnableVertexAttribArray(index = 0)
glVertexAttribPointer(index = 1, size = 3, type = GL_FLOAT, normalized = GL_FALSE, stride = 20, pointer = 0x8)
glEnableVertexAttribArray(index = 1)
<draw> glDrawArrays(mode = GL_TRIANGLES, first = 0, count = 3)
glDisableVertexAttribArray(index = 0)
glDisableVertexAttribArray(index = 1)
